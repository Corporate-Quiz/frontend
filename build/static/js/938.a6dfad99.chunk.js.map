{"version":3,"file":"static/js/938.a6dfad99.chunk.js","mappings":"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","sources":["ui-lib/widgets/QuizCard.tsx","ui-lib/widgets/QuizCardList.tsx","pages/Quizzes.tsx","ui-lib/StyledDetailsWrapper.ts","ui-lib/StyledQuizDetailWrapper.ts","ui-lib/StyledQuizDeteilCaption.ts","ui-lib/StyledQuizTag.ts","ui-lib/StyledQuizTagContainer.ts","ui-lib/widgets/QuizMenu.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/restrict-template-expressions */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/no-unsafe-call */\r\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\r\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\r\n/* eslint-disable camelcase */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  Headline,\r\n  Div,\r\n  Button,\r\n} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport { useNavigate } from 'react-router';\r\nimport { DurationIcon, LevelIcon, QuestionsIcon } from '../icons';\r\nimport StyledQuizDetailsWrapper from '../StyledDetailsWrapper';\r\nimport StyledQuizDetailWrapper from '../StyledQuizDetailWrapper';\r\nimport StyledQuizDetailCaption from '../StyledQuizDeteilCaption';\r\nimport StyledQuizTag from '../StyledQuizTag';\r\nimport StyledQuizTagContainer from '../StyledQuizTagContainer';\r\nimport { QuizCardProps } from '../../types/types';\r\nimport { setLoaderState } from '../../store/allSlice/allSlice';\r\nimport { useDispatch } from '../../store/store.types';\r\n\r\nconst StyledQuizContainer = styled.li`\r\n  list-style: none;\r\n  width: 330px;\r\n  height: 322px;\r\n  padding: 0;\r\n  margin: 0;\r\n  overflow: hidden;\r\n  position: relative;\r\n  border-radius: 16px;\r\n  background: var(--white-white, #FFF);\r\n  box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.06), 0 4px 8px 0 rgba(0, 0, 0, 0.04);\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    .cover {\r\n      opacity: 0.5;\r\n      transform: scale(1.3);\r\n    }\r\n    \r\n    .info {\r\n      transform: translateY(-55px);\r\n      -webkit-transform: translateY(-55px);\r\n      -moz-transform: translateY(-55px);\r\n      -o-transform: translateY(-55px);\r\n      -ms-transform: translateY(-55px);\r\n    }\r\n    \r\n    .btn {\r\n      opacity: 1;\r\n      visibility: visible;\r\n      transition-delay: 0s;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledQuizCover = styled.img`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 330px;\r\n  height: 174px;\r\n  object-fit: cover;\r\n  transition: all 4s ease;\r\n  -webkit-transition: all 4s ease;\r\n  -moz-transition: all 4s ease;\r\n  -o-transition: all 4s ease;\r\n  -ms-transition: all 4s ease;\r\n`;\r\n\r\nconst StyledQuizInfoWrapper = styled(Div)`\r\n  padding: 12px 16px 20px;\r\n  width: 100%;\r\n  background-color: #ffffff;\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  top: 178px;\r\n  left: 0;\r\n  transition: all 0.4s ease-in-out;\r\n  -webkit-transition: all 0.4s ease-in-out;\r\n  -moz-transition: all 0.4s ease-in-out;\r\n  -o-transition: all 0.4s ease-in-out;\r\n  -ms-transition: all 0.4s ease-in-out;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  width: 100%;\r\n  height: 40px;\r\n  border-radius: 4px;\r\n  background-color: #5181B8;\r\n  margin-top: 20px;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  transition: opacity 0.4s ease-in-out, visibility 0s ease-in-out 0.4s;\r\n  -webkit-transition: opacity 0.4s ease-in-out, visibility 0s ease-in-out 0.4s;\r\n  -moz-transition: opacity 0.4s ease-in-out, visibility 0s ease-in-out 0.4s;\r\n  -o-transition: opacity 0.4s ease-in-out, visibility 0s ease-in-out 0.4s;\r\n  -ms-transition: opacity 0.4s ease-in-out, visibility 0s ease-in-out 0.4s;\r\n`;\r\n\r\nconst QuizCard: React.FC<QuizCardProps> = (\r\n  {\r\n    id,\r\n    image,\r\n    title,\r\n    description,\r\n    duration,\r\n    level,\r\n    question_amount,\r\n    tags,\r\n  },\r\n) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const onButtonClick = () => {\r\n    navigate(`/quizzes/${id}`);\r\n    dispatch(setLoaderState(true));\r\n  };\r\n\r\n  return (\r\n    <StyledQuizContainer>\r\n      {tags === null\r\n        ? null\r\n        : (\r\n          <StyledQuizTagContainer style={{\r\n            position: 'absolute',\r\n            top: '16px',\r\n            right: '16px',\r\n            zIndex: '2',\r\n          }}>\r\n            {tags.map((tag: any) => (\r\n              <StyledQuizTag\r\n                style={{ backgroundColor: `${tag.color}`, opacity: '.8' }}>\r\n                {tag.name}\r\n              </StyledQuizTag>\r\n            ))}\r\n          </StyledQuizTagContainer>\r\n        )}\r\n      <StyledQuizCover src={image} alt={title} className='cover' />\r\n      <StyledQuizInfoWrapper className='info'>\r\n        <Headline\r\n          weight='1'\r\n          style={{\r\n            letterSpacing: '-0.3px',\r\n          }}>\r\n          {title}\r\n        </Headline>\r\n        <Headline\r\n          style={{\r\n            padding: '4px 0 0 0',\r\n            display: 'inline-block',\r\n            minHeight: '60px',\r\n            letterSpacing: '-0.2px',\r\n          }}>\r\n          {description}\r\n        </Headline>\r\n        <StyledQuizDetailsWrapper>\r\n          <StyledQuizDetailWrapper>\r\n            <DurationIcon />\r\n            <StyledQuizDetailCaption>{`${duration} минут`}</StyledQuizDetailCaption>\r\n          </StyledQuizDetailWrapper>\r\n          <StyledQuizDetailWrapper>\r\n            <LevelIcon />\r\n            <StyledQuizDetailCaption>{level}</StyledQuizDetailCaption>\r\n          </StyledQuizDetailWrapper>\r\n          <StyledQuizDetailWrapper>\r\n            <QuestionsIcon />\r\n            <StyledQuizDetailCaption>{`${question_amount} вопросов`}</StyledQuizDetailCaption>\r\n          </StyledQuizDetailWrapper>\r\n        </StyledQuizDetailsWrapper>\r\n        <StyledButton className='btn' onClick={onButtonClick}>Начать квиз</StyledButton>\r\n      </StyledQuizInfoWrapper>\r\n    </StyledQuizContainer>\r\n  );\r\n};\r\n\r\nexport default QuizCard;\r\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n/* eslint-disable camelcase */\r\nimport React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport QuizCard from './QuizCard';\r\n\r\nimport { TQuize } from '../../types/types';\r\n\r\nconst StyledQuizListContainer = styled.ul`\r\n  margin: 0;\r\n  padding: 0 0 80px 0;\r\n  max-width: 1074px;\r\n  list-style: none;\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 42px;\r\n`;\r\n\r\nconst QuizCardList: FC<{ quizList: TQuize[] | undefined }> = ({ quizList }) => {\r\n  console.log(quizList, quizList?.length !== 0 || quizList !== undefined, quizList?.length);\r\n  return (\r\n    <StyledQuizListContainer>\r\n      {quizList?.length === 0 || quizList === undefined\r\n        ? (\r\n          <>\r\n            <div> </div>\r\n            <p style={{ fontSize: '16px', color: '#818C99', paddingLeft: '15px' }}>Ничего не найдено</p>\r\n          </>\r\n        ) : quizList?.map((quiz: TQuize) => (\r\n          <QuizCard\r\n            id={quiz.id}\r\n            key={quiz.id}\r\n            image={quiz.image}\r\n            title={quiz.name}\r\n            description={quiz.description}\r\n            duration={quiz.duration}\r\n            level={quiz.level}\r\n            question_amount={quiz.question_amount}\r\n            tags={quiz.tags} />\r\n        ))}\r\n    </StyledQuizListContainer>\r\n  );\r\n};\r\n\r\nexport default QuizCardList;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable ternary/no-unreachable */\r\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport { Div } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport styled from 'styled-components';\r\nimport QuizCardList from '../ui-lib/widgets/QuizCardList';\r\nimport QuizMenu from '../ui-lib/widgets/QuizMenu';\r\nimport { useGetAllQuizesQuery } from '../api/apiv2';\r\nimport { useSelector, useDispatch } from '../store/store.types';\r\nimport { setFromCastle } from '../store/allSlice/allSlice';\r\n\r\nconst StyledDiv = styled(Div)`\r\n    max-width: 1074px;\r\n    width: 100%;\r\n    padding: 0;\r\n`;\r\n\r\nconst Quizzes: FC = () => {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const { fromCastle } = useSelector((state) => state.all);\r\n  const [search, setSearch] = useState('');\r\n  const [quizType, setQuizType] = useState(fromCastle ? 'appointed' : 'all');\r\n  const { data, error, isLoading } = useGetAllQuizesQuery();\r\n\r\n  const [quizzesOnPage, setQuizzesOnPage] = useState(data);\r\n\r\n  const quizNameFilter = data?.filter(\r\n    ({ name }) => name.toLowerCase().indexOf(search.toLowerCase()) > -1,\r\n  );\r\n\r\n  const quizTypeFilter = (type: string) => {\r\n    setQuizType(type);\r\n    if (type !== 'all') {\r\n      if (type === 'appointed') {\r\n        setQuizzesOnPage(data?.filter(({ appointed }) => appointed === true));\r\n      } else {\r\n        setQuizzesOnPage(data?.filter(({ isPassed }) => isPassed === true));\r\n      }\r\n    } else {\r\n      setQuizzesOnPage(data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (fromCastle && quizType === 'appointed') {\r\n      dispatch(setFromCastle(false));\r\n      setQuizType('appointed');\r\n      quizTypeFilter('appointed');\r\n    } else {\r\n      setQuizzesOnPage(data);\r\n    }\r\n  }, [data, location]);\r\n\r\n  return (\r\n    <StyledDiv>\r\n      <QuizMenu\r\n        search={search}\r\n        setSearch={setSearch}\r\n        quizType={quizType}\r\n        quizTypeFilter={quizTypeFilter} />\r\n      <QuizCardList quizList={search !== '' ? quizNameFilter : quizzesOnPage} />\r\n    </StyledDiv>\r\n  );\r\n};\r\n\r\nexport default Quizzes;\r\n","import styled from 'styled-components';\r\nimport { Div } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nconst StyledQuizDetailsWrapper = styled(Div)`\r\n  padding: 13px 0 0 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  gap: 12px;\r\n`;\r\n\r\nexport default StyledQuizDetailsWrapper;\r\n","import styled from 'styled-components';\r\nimport { Div } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nconst StyledQuizDetailWrapper = styled(Div)`\r\n  padding: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  gap: 4px;\r\n`;\r\n\r\nexport default StyledQuizDetailWrapper;\r\n","import styled from 'styled-components';\r\nimport { Caption } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nconst StyledQuizDetailCaption = styled(Caption)`\r\n  font-weight: 600;\r\n  color: #818C99;\r\n  text-transform: uppercase;\r\n  letter-spacing: -0.55px;\r\n`;\r\n\r\nexport default StyledQuizDetailCaption;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledQuizTag = styled.span`\r\n  display: block;\r\n  padding: 4px;\r\n  border-radius: 4px;\r\n  width: fit-content;\r\n  height: fit-content;\r\n  background-color: rgba(80, 69, 119, 0.8);\r\n  font-size: 11px;\r\n  line-height: 14px;\r\n  font-weight: 400;\r\n  color: #ffffff;\r\n`;\r\n\r\nexport default StyledQuizTag;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledQuizTagContainer = styled.ul`\r\n  margin: 0;\r\n  padding: 0 0 0 16px;\r\n  list-style: none;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: flex-end;\r\n  align-items: flex-start;\r\n  gap: 8px;\r\n`;\r\n\r\nexport default StyledQuizTagContainer;\r\n","/* eslint-disable react/require-default-props */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable max-len */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-expressions */\r\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\r\n/* eslint-disable @typescript-eslint/no-unsafe-call */\r\nimport React, { SetStateAction } from 'react';\r\nimport {\r\n  Tabs,\r\n  TabsItem,\r\n  Search,\r\n  Badge,\r\n  Div,\r\n} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledDiv = styled(Div)`\r\n  padding: 0 0 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledTabs = styled(Tabs)`\r\n  max-width: 429px;\r\n  width: 100%;\r\n  height: 48px;\r\n\r\n  & > div {\r\n    display: flex;\r\n    gap: 16px;\r\n  }\r\n\r\n  & > div > .vkuiTabsItem--selected {\r\n    background-color: rgba(63, 138, 224, 0.05);\r\n    color: #000;\r\n  }\r\n\r\n  & > div > .vkuiTabsItem--selected > .vkuiTabsItem__status > .vkuiBadge--mode-prominent {\r\n    background-color: #ff3347;\r\n  }\r\n  \r\n  & > div > .vkuiTabsItem--selected:hover {\r\n    background: rgba(63, 138, 224, 0.15);\r\n  }\r\n`;\r\n\r\nexport const StyledTabsItem = styled(TabsItem)`\r\n  padding: 0 16px;\r\n  box-sizing: border-box;\r\n  max-width: max-content;\r\n  min-width: 125px;\r\n  height: 100%;\r\n\r\n  &:hover {\r\n    background: none;\r\n  }\r\n\r\n  & > div {\r\n    display: none;\r\n  }\r\n\r\n  & > span {\r\n    color: #818C99;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 20px;\r\n    letter-spacing: -0.32px;\r\n  }\r\n\r\n  &:hover > span {\r\n    color: #000;\r\n  }\r\n\r\n  & > .vkuiTabsItem__status > .vkuiBadge--mode-prominent {\r\n    background-color: #818C99;\r\n  }\r\n\r\n  &:hover > .vkuiTabsItem__status > .vkuiBadge--mode-prominent {\r\n    background-color: #ff3347;\r\n  }\r\n`;\r\n\r\nconst QuizMenu: React.FC<{\r\n  search: string,\r\n  setSearch: any,\r\n  quizType: string,\r\n  quizTypeFilter: (type: string) => void,\r\n}> = ({\r\n  search,\r\n  setSearch,\r\n  quizType,\r\n  quizTypeFilter,\r\n}) => {\r\n  const onChange = (e: { target: { value: SetStateAction<string>; }; }) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <StyledDiv>\r\n      <StyledTabs>\r\n        <StyledTabsItem selected={quizType === 'all'} onClick={() => quizTypeFilter('all')}>\r\n          Все квизы\r\n        </StyledTabsItem>\r\n        <StyledTabsItem\r\n          selected={quizType === 'appointed'}\r\n          status={<Badge mode='prominent' />}\r\n          onClick={() => quizTypeFilter('appointed')}>\r\n          Назначенные\r\n        </StyledTabsItem>\r\n        <StyledTabsItem selected={quizType === 'done'} onClick={() => quizTypeFilter('done')}>\r\n          Пройденные\r\n        </StyledTabsItem>\r\n      </StyledTabs>\r\n      <Search\r\n        style={{\r\n          maxWidth: '361px',\r\n          width: '100%',\r\n          margin: '0',\r\n          padding: '0',\r\n        }}\r\n        value={search}\r\n        onChange={onChange} />\r\n    </StyledDiv>\r\n  );\r\n};\r\n\r\nexport default QuizMenu;\r\n"],"names":["StyledQuizContainer","styled","li","_templateObject","_taggedTemplateLiteral","StyledQuizCover","img","_templateObject2","StyledQuizInfoWrapper","Div","_templateObject3","StyledButton","Button","_templateObject4","_ref","id","image","title","description","duration","level","question_amount","tags","navigate","useNavigate","dispatch","useDispatch","_jsxs","children","_jsx","StyledQuizTagContainer","style","position","top","right","zIndex","map","tag","StyledQuizTag","backgroundColor","concat","color","opacity","name","src","alt","className","Headline","weight","letterSpacing","padding","display","minHeight","StyledQuizDetailsWrapper","StyledQuizDetailWrapper","DurationIcon","StyledQuizDetailCaption","LevelIcon","QuestionsIcon","onClick","setLoaderState","StyledQuizListContainer","ul","quizList","console","log","length","undefined","_Fragment","fontSize","paddingLeft","quiz","QuizCard","StyledDiv","location","useLocation","fromCastle","useSelector","state","all","_useState","useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","quizType","setQuizType","_useGetAllQuizesQuery","useGetAllQuizesQuery","data","_useState5","error","isLoading","_useState6","quizzesOnPage","setQuizzesOnPage","quizNameFilter","filter","toLowerCase","indexOf","quizTypeFilter","type","_ref2","appointed","_ref3","isPassed","useEffect","setFromCastle","QuizMenu","QuizCardList","Caption","span","StyledTabs","Tabs","StyledTabsItem","TabsItem","selected","status","Badge","mode","Search","maxWidth","width","margin","value","onChange","e","target"],"sourceRoot":""}